apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-materializer-general
  labels:
    app: {{ .Release.Name }}-postgres-materializer-general
spec:
  replicas: {{ .Values.materializerGeneralReplicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres-materializer-general
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres-materializer-general
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51805'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: cdl-postgres-materializer-general
        image: "{{ .Values.global.imageRepositoryPath }}cdl-materializer-general:{{ .Values.global.imageVersion }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["/bin/materializer-general","postgres"]
        env:
        - name: POSTGRES_USERNAME
          value: {{ .Values.postgresUsername }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresPassword }}
        - name: POSTGRES_HOST
          value: {{ .Values.postgresHost }}
        - name: POSTGRES_PORT
          value: "{{ .Values.postgresPort }}"
        - name: POSTGRES_DBNAME
          value: {{ .Values.postgresDbname }}
        - name: POSTGRES_SCHEMA
          value: {{ .Values.postgresSchema }}
        - name: INPUT_PORT
          value: "6400"
        - name: RUST_LOG
          value: "info,materializer-general=debug"
        ports:
        - containerPort: 51805
      imagePullSecrets:
      - name: {{ .Values.global.cdlImagePullSecrets }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres-materializer-general
spec:
  type: ClusterIP
  selector:
    app: {{ .Release.Name }}-postgres-materializer-general
  ports:
    - port: 6400
      targetPort: 6400
