apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-command-service
  labels:
    app: {{ .Release.Name }}-postgres-command-service
    repository.type: document
    repository.name: postgres
spec:
  replicas: {{ .Values.commandServiceReplicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres-command-service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres-command-service
        repository.type: document
        repository.name: postgres
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '51805'
        prometheus.io/path: '/metrics'
    spec:
      containers:
      - name: cdl-postgres-command-service
        image: "{{ .Values.global.imageRepositoryPath }}cdl-command-service:{{ .Values.global.imageVersion }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["/bin/command-service"]
        env:
        - name: COMMAND_SERVICE_REPOSITORY_KIND
          value: 'postgres'
        {{- if eq .Values.global.communicationMethod "kafka" }}
        - name: COMMAND_SERVICE_COMMUNICATION_METHOD
          value: "kafka"
        - name: COMMAND_SERVICE_KAFKA__BROKERS
          value: {{ .Values.global.kafkaBrokers }}
        - name: COMMAND_SERVICE_KAFKA__GROUP_ID
          value: "cdl-postgres-command-service"
        {{- else if eq .Values.global.communicationMethod "amqp" }}
        - name: COMMAND_SERVICE_COMMUNICATION_METHOD
          value: "amqp"
        - name: COMMAND_SERVICE_AMQP__EXCHANGE_URL
          value: {{ .Values.global.amqpConnectionString }}
        - name: COMMAND_SERVICE_AMQP__TAG
          value: "cdl-postgres-command-service"
        {{- else }}
        - name: COMMAND_SERVICE_COMMUNICATION_METHOD
          value: "grpc"
        - name: COMMAND_SERVICE_GRPC__ADDRESS
          value: "0.0.0.0:6400"
        {{- end }}
        - name: COMMAND_SERVICE_LISTENER__ORDERED_SOURCES
          value: {{ .Values.inputSource }}
        - name: COMMAND_SERVICE_POSTGRES__USERNAME
          value: {{ .Values.postgresUsername }}
        - name: COMMAND_SERVICE_POSTGRES__PASSWORD
          value: {{ .Values.postgresPassword }}
        - name: COMMAND_SERVICE_POSTGRES__HOST
          value: {{ .Values.postgresHost }}
        - name: COMMAND_SERVICE_POSTGRES__PORT
          value: "{{ .Values.postgresPort }}"
        - name: COMMAND_SERVICE_POSTGRES__DBNAME
          value: {{ .Values.postgresDbname }}
        - name: COMMAND_SERVICE_POSTGRES__SCHEMA
          value: {{ .Values.postgresSchema }}
        - name: COMMAND_SERIVCE_NOTIFICATIONS__DESTINATION
          value: {{ .Values.global.reportDestination }}
        - name: COMMAND_SERIVCE_NOTIFICATIONS__ENABLED
          value: 'true'
        - name: COMMAND_SERVICE_LOG__RUST_LOG
          value: "info,command_service=debug"
        ports:
        - containerPort: 51805
      imagePullSecrets:
      - name: {{ .Values.global.cdlImagePullSecrets }}


