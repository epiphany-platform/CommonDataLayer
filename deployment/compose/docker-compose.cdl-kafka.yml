###
# This is example docker compose that sets up local developer environment.
# Please refer to README.md for instructions on how to run it.
###

version: "2.2"

services:
  postgres:
    volumes:
      - ./setup/postgres:/docker-entrypoint-initdb.d

  kafka:
    environment:
      KAFKA_CREATE_TOPICS: "cdl.data.input:1:1,cdl.reports:1:1,cdl.timeseries.vm.1.data:1:1,cdl.timeseries.vm.2.data:1:1,cdl.timeseries.druid.1.data:1:1,cdl.timeseries.druid.2.data:1:1,cdl.timeseries.vm.2.data:1:1,cdl.timeseries.internal.druid:1:1,cdl.document.1.data:1:1,cdl.document.2.data:1:1"

  schema_registry:
    image: cdl-schema-registry:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=schema-registry
        - ENV=DEV
    command: /bin/schema-registry
    ports:
      - "50101:50101"
    environment:
      DB_NAME: "/var/data/schema"
      REPLICATION_ROLE: "master"
      REPLICATION_QUEUE: "kafka"
      KAFKA_BROKERS: "kafka:9093"
      KAFKA_GROUP_ID: "schema_registry"
      REPLICATION_TOPIC_OR_QUEUE: "cdl.schema_registry.internal"
      REPLICATION_TOPIC_OR_EXCHANGE: "cdl.schema_registry.internal"
      INPUT_PORT: "50101"
      IMPORT_FILE: "/var/data/schema.json"
      RUST_LOG: info,schema_registry=trace
    volumes:
      - ./setup/schema_registry/initial-schema.json:/var/data/schema.json
    depends_on:
      - kafka

  data_router:
    image: cdl-data-router:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=data-router
        - ENV=DEV
    command: /bin/data-router
    environment:
      MESSAGE_QUEUE: "kafka"
      KAFKA_BROKERS: "kafka:9093"
      KAFKA_GROUP_ID: "data_router"
      INPUT_TOPIC_OR_QUEUE: "cdl.data.input"
      ERROR_TOPIC_OR_EXCHANGE: "cdl.reports"
      SCHEMA_REGISTRY_ADDR: "http://schema_registry:50101"
      CACHE_CAPACITY: "1000"
      RUST_LOG: info,data_router=trace
    depends_on:
      - kafka
      - schema_registry

  postgres_command:
    image: cdl-command-service:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=command-service
        - ENV=DEV
    command: "/bin/command-service postgres"
    environment:
      COMMUNICATION_METHOD: "kafka"
      KAFKA_GROUP_ID: "postgres_command"
      KAFKA_BROKERS: "kafka:9093"
      ORDERED_TOPICS_OR_QUEUES: "cdl.document.1.data"
      UNORDERED_TOPICS_OR_QUEUES: "cdl.document.2.data"
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: postgres
      POSTGRES_SCHEMA: cdl
      REPORT_TOPIC_OR_EXCHANGE: "cdl.reports"
      RUST_LOG: info,command_service=trace
    depends_on:
      - postgres
      - data_router
      - kafka

  victoria_command:
    image: cdl-command-service:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=command-service
        - ENV=DEV
    command: "/bin/command-service victoria-metrics"
    environment:
      COMMUNICATION_METHOD: "kafka"
      KAFKA_GROUP_ID: "victoria_command"
      KAFKA_BROKERS: "kafka:9093"
      ORDERED_TOPICS_OR_QUEUES: "cdl.timeseries.vm.1.data"
      UNORDERED_TOPICS_OR_QUEUES: "cdl.timeseries.vm.2.data"
      VICTORIA_METRICS_OUTPUT_URL: http://victoria_metrics:8428
      REPORT_TOPIC_OR_EXCHANGE: "cdl.reports"
      RUST_LOG: info,command_service=trace
    depends_on:
      - victoria_metrics
      - data_router
      - kafka

  druid_command:
    image: cdl-command-service:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=command-service
        - ENV=DEV
    command: "/bin/command-service druid"
    environment:
      COMMUNICATION_METHOD: "kafka"
      KAFKA_GROUP_ID: "druid_command"
      KAFKA_BROKERS: "kafka:9093"
      ORDERED_TOPICS_OR_QUEUES: "cdl.timeseries.druid.1.data"
      UNORDERED_TOPICS_OR_QUEUES: "cdl.timeseries.druid.2.data"
      INGESTION_METHOD: KAFKA
      DRUID_OUTPUT_BROKERS: "kafka:9093"
      DRUID_OUTPUT_TOPIC: 'cdl.timeseries.internal.druid'
      REPORT_BROKER: "kafka:9093"
      REPORT_TOPIC: "cdl.reports"
      RUST_LOG: info,command_service=trace
    depends_on:
      - data_router
      - kafka

  postgres_query:
    image: cdl-query-service:latest
    command: "/bin/query-service postgres"
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=query-service
        - ENV=DEV

    ports:
      - "50102:50102"
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DBNAME: postgres
      POSTGRES_SCHEMA: cdl
      INPUT_PORT: 50102
      RUST_LOG: info,query_service=trace

  query_router:
    image: cdl-query-router:latest
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=query-router
        - ENV=DEV
    command: "/bin/query-router"
    ports:
      - "50103:50103"
    environment:
      CACHE_CAPACITY: 1024
      INPUT_PORT: 50103
      SCHEMA_REGISTRY_ADDR: "http://schema_registry:50101"
      RUST_LOG: info,query_router=trace

  victoria_query:
    image: cdl-query-service-ts:latest
    command: "/bin/query-service-ts victoria"
    ports:
      - "50104:50104"
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=query-service-ts
    environment:
      VICTORIA_QUERY_URL: "http://victoria_metrics:8428/api/v1"
      INPUT_PORT: 50104
      RUST_LOG: debug

  druid_query:
    image: cdl-query-service-ts:latest
    command: "/bin/query-service-ts druid"
    ports:
      - "50105:50105"
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=query-service-ts
    environment:
      DRUID_QUERY_URL: "http://router:8888/druid/v2"
      DRUID_TABLE_NAME: "cdl.timeseries.internal.druid"
      INPUT_PORT: 50105
      RUST_LOG: debug

  web_api:
    image: cdl-api:latest
    command: "/bin/api"
    ports:
      - "50106:50106"
    build:
      context: ../..
      dockerfile: Dockerfile
      args:
        - BIN=api
    environment:
      INPUT_PORT: 50106
      RUST_LOG: info,api=trace
      SCHEMA_REGISTRY_ADDR: "http://schema_registry:50101"
      QUERY_ROUTER_ADDR: "http://query_router:50103"
      MESSAGE_QUEUE: "kafka"
      KAFKA_BROKERS: "kafka:9093"
      KAFKA_GROUP_ID: "cdl-api"
      REPORT_TOPIC_OR_QUEUE: "cdl.reports"
