{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/route.ts","../../src/models.ts","../../src/stores.ts","../../src/components/Link.svelte","../../src/components/Header.svelte","../../src/pages/Home.svelte","../../src/pages/insert/MessageList.svelte","../../src/utils.ts","../../src/sample-data.ts","../../src/api.ts","../../src/components/Error.svelte","../../src/components/RemoteContent.svelte","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/pages/insert/MessageForm.svelte","../../src/pages/insert/Insert.svelte","../../src/pages/query/MakeQuery.svelte","../../src/pages/query/Query.svelte","../../src/pages/Settings.svelte","../../src/pages/schemas/Breadcrumbs.svelte","../../src/pages/schemas/Overview.svelte","../../src/pages/schemas/Sidebar.svelte","../../src/pages/schemas/Schemas.svelte","../../src/pages/NotFound.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived } from \"svelte/store\";\nfunction parseCurrentRoute() {\n    const hash = location.hash;\n    const params = new URLSearchParams(location.hash.split(\"?\")[1] || \"\");\n    if (hash === \"\") {\n        return { page: \"home\" };\n    }\n    else if (hash.startsWith(\"#/insert\")) {\n        return { page: \"insert\" };\n    }\n    else if (hash.startsWith(\"#/query\")) {\n        const by = params.get(\"by\") || undefined;\n        if ([\"single\", \"multiple\", \"schema\"].includes(by)) {\n            return { page: \"query\", by: by };\n        }\n        else {\n            return { page: \"query\" };\n        }\n    }\n    else if (hash.startsWith(\"#/settings\")) {\n        return { page: \"settings\" };\n    }\n    else if (hash.startsWith(\"#/schemas\")) {\n        const id = params.get(\"id\") || undefined;\n        const query = params.get(\"query\") || undefined;\n        const version = params.get(\"version\") || undefined;\n        const creating = params.get(\"creating\") === \"true\";\n        return { page: \"schemas\", id, version, query, creating };\n    }\n    return null;\n}\nexport function routeToString(route) {\n    if (route.page === \"home\") {\n        return \"#/\";\n    }\n    else if (route.page === \"insert\") {\n        return \"#/insert\";\n    }\n    else if (route.page === \"settings\") {\n        return \"#/settings\";\n    }\n    else if (route.page === \"query\") {\n        if (route.by) {\n            return `#/query?by=${route.by}`;\n        }\n        else {\n            return \"#/query\";\n        }\n    }\n    else {\n        const params = [\n            [\"id\", route.id],\n            [\"version\", route.version],\n            [\"query\", route.query],\n            [\"creating\", route.creating ? \"true\" : undefined],\n        ].filter(([_, value]) => value).map(([key, value]) => `${key}=${value}`);\n        if (params.length) {\n            return `#/schemas?${params.join(\"&\")}`;\n        }\n        else {\n            return \"#/schemas\";\n        }\n    }\n}\nconst innerRoute = writable(parseCurrentRoute());\nwindow.onpopstate = () => {\n    innerRoute.set(parseCurrentRoute());\n};\nexport function pushRoute(to) {\n    history.pushState(null, \"\", routeToString(to));\n    innerRoute.set(to);\n}\nexport function replaceRoute(to) {\n    history.replaceState(null, \"\", routeToString(to));\n    innerRoute.set(to);\n}\nexport const route = derived(innerRoute, $inner => $inner);\n","export const notLoaded = { status: \"not-loaded\" };\nexport const loading = { status: \"loading\" };\nexport const loaded = (data) => ({ status: \"loaded\", data });\nexport const loadingError = (error) => ({ status: \"error\", error });\n","import { writable } from \"svelte/store\";\nimport { notLoaded } from \"./models\";\nexport const schemas = writable(notLoaded);\nexport const apiUrl = writable(localStorage.getItem(\"api-url\") || \"\");\napiUrl.subscribe(url => {\n    localStorage.setItem(\"api-url\", url);\n});\nexport const darkMode = writable(localStorage.getItem(\"dark-mode\") === \"true\");\ndarkMode.subscribe(isDarkMode => {\n    localStorage.setItem(\"dark-mode\", JSON.stringify(isDarkMode));\n});\n","<script lang=\"ts\">\n  import { routeToString, route, pushRoute, replaceRoute } from \"../route\";\n  import type { Route } from \"../route\";\n\n  export let to: Route;\n  export let className: string = \"\";\n  export let title: string | undefined = undefined;\n  export let replace: boolean = false;\n\n  function handleClick() {\n    if (replace) {\n      replaceRoute(to);\n    } else {\n      pushRoute(to);\n    }\n  }\n</script>\n\n<a\n  class={`${routeToString($route) === routeToString(to) ? 'active' : ''} ${className}`}\n  {title}\n  on:click={handleClick}>\n  <slot />\n</a>\n","<script lang=\"ts\">\n  import { route } from \"../route\";\n  import { darkMode } from \"../stores\";\n  import Link from \"./Link.svelte\";\n\n  let menuOpen: boolean = false;\n\n  route.subscribe(() => {\n    menuOpen = false;\n  });\n</script>\n\n<style>\n  nav {\n    background: #346cc1;\n  }\n\n  nav.dark-mode {\n    background: #9156d3;\n  }\n\n  .desktop-link {\n    color: #fafafa;\n  }\n\n  .mobile-link {\n    color: #424242;\n  }\n\n  ul.mobile-menu {\n    position: absolute;\n    top: 15px;\n    right: 30px;\n    z-index: 10;\n  }\n\n  ul.mobile-menu * {\n    color: #424242;\n  }\n\n  .mobile-menu-toggle {\n    color: #fafafa;\n  }\n\n  div.mobile-menu-background {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 9;\n    background: rgba(0, 0, 0, 0.25);\n  }\n</style>\n\n<nav class={`${$darkMode ? 'dark-mode' : ''}`}>\n  <div class=\"nav-container\">\n    <div class=\"display-lg-up\">\n      <div class=\"nav-logo\">\n        <Link to={{ page: 'home' }}>Common Data Layer</Link>\n      </div>\n    </div>\n    <div class=\"display-lg-down\">\n      <div class=\"nav-logo\">\n        <Link to={{ page: 'home' }}>CDL</Link>\n      </div>\n    </div>\n    <ul class=\"nav-links\">\n      <li>\n        <Link to={{ page: 'insert' }}>\n          <span class=\"desktop-link\">Insert</span>\n        </Link>\n      </li>\n      <li>\n        <Link to={{ page: 'query' }}>\n          <span class=\"desktop-link\">Query</span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={$route?.page === 'schemas' ? 'active' : ''}\n          to={{ page: 'schemas' }}>\n          <span class=\"desktop-link\">Schemas</span>\n        </Link>\n      </li>\n      <li>\n        <Link to={{ page: 'settings' }}>\n          <span class=\"desktop-link\">Settings</span>\n        </Link>\n      </li>\n    </ul>\n    <span class=\"mobile-menu-toggle\" on:click={() => (menuOpen = !menuOpen)} />\n    {#if menuOpen}\n      <div class=\"mobile-menu-background\" on:click={() => (menuOpen = false)} />\n    {/if}\n    <ul\n      class=\"mobile-menu menu\"\n      style={`display: ${menuOpen ? 'block' : 'none'};`}>\n      <li>\n        <Link to={{ page: 'insert' }}>\n          <span class=\"mobile-link\">Insert</span>\n        </Link>\n      </li>\n      <li>\n        <Link to={{ page: 'query' }}>\n          <span class=\"mobile-link\">Query</span>\n        </Link>\n      </li>\n      <li>\n        <Link\n          className={$route?.page === 'schemas' ? 'active' : ''}\n          to={{ page: 'schemas' }}>\n          <span class=\"mobile-link\">Schemas</span>\n        </Link>\n      </li>\n      <li>\n        <Link to={{ page: 'settings' }}>\n          <span class=\"mobile-link\">Settings</span>\n        </Link>\n      </li>\n    </ul>\n  </div>\n</nav>\n","<script lang=\"ts\">\n  import Link from \"../components/Link.svelte\";\n</script>\n\n<div class=\"container container-small\">\n  <div class=\"row\">\n    <div class=\"col align-center\">\n      <h2><u>The Common Data Layer</u></h2>\n      <p>\n        The Common Data Layer (CDL) is a data storage service. It is designed\n        with performance, versatility, scalability, and ease-of-modification as\n        key tenets of its design, among others.\n      </p>\n      <p><i>TODO: ADD A DIAGRAM HERE</i></p>\n      <p>\n        Get started by\n        <Link to={{ page: 'schemas' }}><u>creating a schema</u></Link>\n        for your data.\n      </p>\n      <p>\n        You can learn more by visiting our\n        <a href=\"https://github.com/epiphany-platform/CommonDataLayer\">\n          <u>GitHub page</u></a>.\n      </p>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import type { InsertMessage } from \"../../models\";\n\n  export let messages: InsertMessage[];\n  export let sendTransaction: () => void;\n</script>\n\n<style>\n  .send-button {\n    margin-top: 10px;\n  }\n</style>\n\n<div class=\"sidebar sidebar-left align-right\">\n  <h3 class=\"sidebar-category\">Messages in Transaction</h3>\n  <ul class=\"sidebar-links\">\n    {#if messages.length}\n      {#each messages as message}\n        <li><span>{message.objectId}</span></li>\n      {/each}\n    {:else}\n      <li><i>No messages in transaction.</i></li>\n    {/if}\n    <li class=\"send-button\">\n      <button disabled={messages.length === 0} on:click={sendTransaction}>\n        Send Transaction\n      </button>\n    </li>\n  </ul>\n</div>\n","import { loaded } from \"./models\";\nexport function mapLoaded(data, mapper) {\n    if (data.status === \"loaded\") {\n        return loaded(mapper(data.data));\n    }\n    else {\n        return data;\n    }\n}\nexport function getLoaded(data) {\n    return data.status === \"loaded\" ? data.data : null;\n}\nexport function validUuid(id) {\n    const uuidRegex = /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i;\n    return uuidRegex.test(id);\n}\n;\n","export const allSchemas = [\n    {\n        name: \"Work Order\",\n        id: \"9262ec4f-3470-4f9a-ab68-2a20aa1988a1\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"DocumentStorage\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Item\",\n        id: \"29ff99d5-10ec-4b00-be71-a16380fad3a9\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"DocumentStorage\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 3\",\n        id: \"677103e5-06c3-4e7f-9268-c581cade1940\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"Timeseries\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 4\",\n        id: \"41cb0f27-ea34-4e9f-858f-88af982c9441\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"DocumentStorage\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 5\",\n        id: \"bb5bd9bc-863f-4801-9cc6-2e154fe98d31\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"Timeseries\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 6\",\n        id: \"a95e093c-200f-4d36-802b-5eb5320680ee\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"Timeseries\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 7\",\n        id: \"7318a478-92e9-4e4f-9253-fc11717e91ef\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"Timeseries\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n    {\n        name: \"Schema 8\",\n        id: \"5464cc54-5930-4380-9aaf-407016738098\",\n        topic: \"document-insert-topic\",\n        queryAddress: \"https://query-address.com/\",\n        schemaType: \"DocumentStorage\",\n        versions: [\n            {\n                version: \"1.0.0\",\n                definition: \"{ \\\"a\\\": 123 }\"\n            }\n        ]\n    },\n];\nexport const mockData = [\n    {\n        schemaId: \"9262ec4f-3470-4f9a-ab68-2a20aa1988a1\",\n        objectId: \"cd4a2d63-0a2c-4f0f-801f-0c73deff277d\",\n        data: { some: \"data 1\" }\n    },\n    {\n        schemaId: \"9262ec4f-3470-4f9a-ab68-2a20aa1988a1\",\n        objectId: \"e2231d08-63d2-403f-a4d1-09d69213adb0\",\n        data: { some: \"data 2\" }\n    },\n    {\n        schemaId: \"9262ec4f-3470-4f9a-ab68-2a20aa1988a1\",\n        objectId: \"243f7c62-0cbe-4b81-809f-baba96daf57c\",\n        data: { some: \"data 3\" }\n    },\n    {\n        schemaId: \"9262ec4f-3470-4f9a-ab68-2a20aa1988a1\",\n        objectId: \"431adb0f-3cc6-4022-96d4-62137fbc108b\",\n        data: { some: \"data 4\" }\n    },\n    {\n        schemaId: \"29ff99d5-10ec-4b00-be71-a16380fad3a9\",\n        objectId: \"581cd4b8-7043-40cf-a524-e1cd0652605d\",\n        data: { some: \"data 5\" }\n    },\n    {\n        schemaId: \"29ff99d5-10ec-4b00-be71-a16380fad3a9\",\n        objectId: \"a96d4792-a68f-4262-b0b5-aa4341f80ca6\",\n        data: { some: \"data 6\" }\n    },\n    {\n        schemaId: \"29ff99d5-10ec-4b00-be71-a16380fad3a9\",\n        objectId: \"946afff9-126f-4a7c-bf26-7869021efda5\",\n        data: { some: \"data 7\" }\n    },\n];\n","import { get } from \"svelte/store\";\nimport { schemas, apiUrl } from \"./stores\";\nimport { loading, loaded } from \"./models\";\nimport { allSchemas } from \"./sample-data\";\nexport async function queryApi(query, variables) {\n    var _a;\n    try {\n        const response = await fetch(get(apiUrl), {\n            method: \"post\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify({ query, variables })\n        });\n        const data = await response.json();\n        if ((_a = data === null || data === void 0 ? void 0 : data.errors) === null || _a === void 0 ? void 0 : _a.length) {\n            return { status: \"error\", error: data.errors[0].message };\n        }\n        else {\n            return { status: \"loaded\", data: data.data };\n        }\n    }\n    catch (exception) {\n        return { status: \"error\", error: exception.toString() };\n    }\n}\nexport const UPDATE_SCHEMA = ``;\nexport function loadSchemas() {\n    schemas.set(loading);\n    setTimeout(() => {\n        schemas.set(loaded(allSchemas));\n    }, 1000);\n}\n;\n","<script lang=\"ts\">\n    export let error: string;\n</script>\n\n<p class=\"alert alert-warning\">{error}</p>\n","<script lang=\"ts\">\n  import type { RemoteData } from \"../models\";\n  import Error from \"./Error.svelte\";\n  import LoadingBar from \"./LoadingBar.svelte\";\n\n  export let data: RemoteData<any>;\n</script>\n\n{#if data.status === 'loaded'}\n  <slot />\n{:else if data.status === 'not-loaded'}\n  <slot name=\"not-loaded\" />\n{:else if data.status === 'loading'}\n  <slot name=\"loading\">\n    <LoadingBar />\n  </slot>\n{:else}\n  <slot name=\"error\">\n    <Error error={data.status === 'error' ? data.error : ''} />\n  </slot>\n{/if}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","<script lang=\"ts\">\n  import { get } from \"svelte/store\";\n  import type { InsertMessage } from \"../../models\";\n  import { getLoaded, validUuid } from \"../../utils\";\n  import { schemas } from \"../../stores\";\n  import { loadSchemas } from \"../../api\";\n  import RemoteContent from \"../../components/RemoteContent.svelte\";\n  import { v4 as uuidv4 } from \"uuid\";\n\n  export let addMessage: (message: InsertMessage) => void;\n\n  let objectId: string = \"\";\n  let schemaId: string = \"\";\n  let data: string = \"\";\n\n  let objectIdError: string = \"\";\n  let dataError: string = \"\";\n\n  if (get(schemas).status === \"not-loaded\") {\n    loadSchemas();\n  }\n\n  function submit() {\n    objectIdError = \"\";\n    dataError = \"\";\n    var errorsFound = false;\n\n    if (objectId.length > 0 && !validUuid(objectId)) {\n      objectIdError = \"Invalid UUID\";\n      errorsFound = true;\n    }\n\n    var parsedData: Object | null = null;\n    try {\n      parsedData = JSON.parse(data);\n    } catch (exception) {\n      dataError = \"Invalid JSON\";\n      errorsFound = true;\n    }\n\n    if (!errorsFound) {\n      objectId = \"\";\n      schemaId = \"\";\n      data = \"\";\n\n      addMessage({\n        objectId: objectId || uuidv4(),\n        schemaId,\n        data: parsedData,\n      });\n    }\n  }\n</script>\n\n<form on:submit|preventDefault={submit}>\n  <div class=\"form-control\">\n    <label>Object ID\n      <input\n        type=\"text\"\n        bind:value={objectId}\n        class={objectIdError ? 'invalid' : ''}\n        placeholder=\"Leave empty for a random ID\" />\n      {#if objectIdError}\n        <p class=\"validation-error\">{objectIdError}</p>\n      {/if}\n    </label>\n  </div>\n  <div class=\"form-control\">\n    <label>Schema ID</label>\n    <RemoteContent data={$schemas}>\n      {#if getLoaded($schemas)}\n        <select required bind:value={schemaId}>\n          <option value=\"\">Select a Schema</option>\n          {#each getLoaded($schemas) || [] as schema}\n            <option value={schema.id}>{schema.name}</option>\n          {/each}\n        </select>\n      {/if}\n\n      <select disabled slot=\"loading\">\n        <option>Loading...</option>\n      </select>\n    </RemoteContent>\n  </div>\n  <div class=\"form-control\">\n    <label>Payload\n      <textarea\n        required\n        bind:value={data}\n        class={dataError ? 'invalid' : ''}\n        placeholder=\"JSON content goes here...\" />\n    </label>\n    {#if dataError}\n      <p class=\"validation-error\">{dataError}</p>\n    {/if}\n  </div>\n  <button type=\"submit\">Add Message to Transaction</button>\n</form>\n","<script lang=\"ts\">\n  import type { InsertMessage } from \"../../models\";\n  import MessageList from \"./MessageList.svelte\";\n  import MessageForm from \"./MessageForm.svelte\";\n\n  let transaction: InsertMessage[] = [];\n\n  function sendTransaction() {}\n</script>\n\n<style>\n  .form-container {\n    margin-left: auto;\n    margin-right: auto;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col align-center\">\n      <h2>Insert Data</h2>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-3 align-right\">\n      <MessageList messages={transaction} {sendTransaction} />\n    </div>\n    <div class=\"form-container col-sm-8 col-sm-offset-1\">\n      <MessageForm\n        addMessage={(message) => (transaction = [...transaction, message])} />\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { get } from \"svelte/store\";\n  import { route, replaceRoute } from \"../../route\";\n  import type { QueryRoute, QueryType } from \"../../route\";\n  import { derived } from \"svelte/store\";\n  import { getLoaded, validUuid } from \"../../utils\";\n  import type { QueryResult, RemoteData } from \"../../models\";\n  import { loaded, loading, notLoaded } from \"../../models\";\n  import { schemas } from \"../../stores\";\n  import { loadSchemas } from \"../../api\";\n\n  import RemoteContent from \"../../components/RemoteContent.svelte\";\n  import { mockData } from \"../../sample-data\";\n\n  export let setResults: (results: RemoteData<QueryResult>) => void;\n\n  const queryBy = derived(route, ($r) => ($r as QueryRoute).by || \"single\");\n\n  let objectId: string = \"\";\n  let objectIds: string = \"\";\n  let schemaId: string = \"\";\n\n  let objectIdError: string = \"\";\n  let objectIdsError: string = \"\";\n\n  if (get(schemas).status === \"not-loaded\") {\n    loadSchemas();\n  }\n\n  function resetResults() {\n    setResults(notLoaded);\n  }\n\n  function setQueryType(event: { currentTarget: { value: string } }) {\n    const by = event.currentTarget.value as QueryType;\n    const $route = get(route);\n    if ($route.page === \"query\" ? $route.by === by : false) return;\n\n    replaceRoute({ page: \"query\", by });\n    objectId = \"\";\n    objectIds = \"\";\n\n    objectIdError = \"\";\n    objectIdsError = \"\";\n  }\n\n  function submit() {\n    objectIdError = \"\";\n    objectIdsError = \"\";\n    var errorsFound = false;\n    var data: QueryResult | null = null;\n\n    const by = get(queryBy);\n    if (by === \"single\") {\n      if (!validUuid(objectId)) {\n        objectIdError = \"Must provide a valid UUID\";\n        errorsFound = true;\n      } else {\n        const value = mockData.find(\n          (d) => d.schemaId === schemaId && d.objectId === objectId\n        );\n        if (value) {\n          data = new Map([[value.objectId, value.data]]);\n        } else {\n          data = new Map();\n        }\n      }\n    } else if (by === \"multiple\") {\n      const ids = objectIds.trim().split(/[ \\r\\n\\t]+/);\n      if (!ids.every(validUuid)) {\n        objectIdsError = \"Must provide valid UUID's\";\n        errorsFound = true;\n      } else {\n        data = new Map(\n          mockData\n            .filter((d) => d.schemaId === schemaId && ids.includes(d.objectId))\n            .map((d) => [d.objectId, d.data])\n        );\n      }\n    } else {\n      data = new Map(\n        mockData\n          .filter((d) => d.schemaId === schemaId)\n          .map((d) => [d.objectId, d.data])\n      );\n    }\n\n    if (!errorsFound) {\n      console.log(data);\n\n      setResults(loading);\n      setTimeout(() => {\n        setResults(loaded(data));\n      }, 1000);\n    }\n  }\n</script>\n\n<style>\n  .run-query-button {\n    margin-top: 10px;\n  }\n</style>\n\n<form on:submit|preventDefault={submit}>\n  <div class=\"form-control\">\n    <label>\n      Query Type\n      <select value={$queryBy} on:blur={setQueryType} on:input={setQueryType}>\n        <option value=\"single\">Single Value</option>\n        <option value=\"multiple\">Multiple Values</option>\n        <option value=\"schema\">By Schema</option>\n      </select>\n    </label>\n  </div>\n  <div class=\"form-control\">\n    <label>\n      Schema\n      <RemoteContent data={$schemas}>\n        <select required bind:value={schemaId}>\n          <option value=\"\">Select a Schema</option>\n          {#each getLoaded($schemas) || [] as schema}\n            <option value={schema.id}>{schema.name}</option>\n          {/each}\n        </select>\n        <select slot=\"loading\" disabled>\n          <option>loading...</option>\n        </select>\n      </RemoteContent>\n    </label>\n  </div>\n  {#if $queryBy === 'single'}\n    <div class=\"form-control\">\n      <label>\n        Object ID\n        <input\n          class={objectIdError ? 'error' : ''}\n          type=\"text\"\n          bind:value={objectId} />\n      </label>\n    </div>\n    {#if objectIdError}\n      <p class=\"validation-error\">{objectIdError}</p>\n    {/if}\n  {:else if $queryBy === 'multiple'}\n    <div class=\"form-control\">\n      <label>\n        Object ID's\n        <textarea\n          class={objectIdsError ? 'invalid' : ''}\n          bind:value={objectIds} />\n      </label>\n    </div>\n    {#if objectIdsError}\n      <p class=\"validation-error\">{objectIdsError}</p>\n    {/if}\n  {/if}\n  <div class=\"align-right\">\n    <button type=\"button\" on:click={resetResults}>Reset Results</button>\n    <button class=\"run-query-button\" type=\"submit\">Run Query</button>\n  </div>\n</form>\n","<script lang=\"ts\">\n  import type { QueryResult, RemoteData } from \"../../models\";\n  import { notLoaded } from \"../../models\";\n  import { getLoaded } from \"../../utils\";\n\n  import RemoteContent from \"../../components/RemoteContent.svelte\";\n  import MakeQuery from \"./MakeQuery.svelte\";\n\n  let results: RemoteData<QueryResult> = notLoaded;\n  $: resultsPretty = JSON.stringify(\n    Array.from(getLoaded(results) || []).reduce((obj, [key, value]) => {\n      obj[key] = value;\n      return obj;\n    }, {}),\n    null,\n    4\n  );\n\n  function setResults(res: RemoteData<QueryResult>) {\n    results = res;\n  }\n</script>\n\n<style>\n  .data {\n    white-space: pre-wrap;\n    text-align: left;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col align-center\">\n      <h2>Insert Data</h2>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-sm-4\">\n      <MakeQuery {setResults} />\n    </div>\n    <div class=\"col-sm-8 align-center\">\n      <section>\n        <h4>Results</h4>\n        <RemoteContent data={results}>\n          <pre class=\"data\">{resultsPretty}</pre>\n          <p slot=\"not-loaded\">Make a query to see data.</p>\n        </RemoteContent>\n      </section>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { darkMode, apiUrl } from \"../stores\";\n</script>\n\n<div class=\"container container-small\">\n  <div class=\"row\">\n    <div class=\"col align-center\">\n      <h2>Settings</h2>\n      <section>\n        <p>\n          <button on:click={() => darkMode.update((m) => !m)}>\n            Your colorscheme is\n            {$darkMode ? 'Dark Mode' : 'Light Mode'}\n          </button>\n        </p>\n        <div class=\"form-control\">\n          <label>\n            Your CDL's GraphQL API URL\n            <input\n              type=\"url\"\n              value={$apiUrl}\n              on:input={(event) => apiUrl.set(event.currentTarget.value)} />\n          </label>\n        </div>\n      </section>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { get, derived } from \"svelte/store\";\n  import { route, replaceRoute } from \"../../route\";\n  import type { SchemasRoute } from \"../../route\";\n  import { schemas } from \"../../stores\";\n  import { getLoaded } from \"../../utils\";\n\n  const schemaId = derived(route, ($r) => ($r as SchemasRoute).id);\n  const version = derived(route, ($r) => ($r as SchemasRoute).version);\n  const schemaName = derived(\n    [schemaId, schemas],\n    ([$id, $schemas]) =>\n      getLoaded($schemas)?.find((schema) => schema.id === $id)?.name\n  );\n\n  function backToAllSchemas() {\n    replaceRoute({\n      ...(get(route) as SchemasRoute),\n      id: undefined,\n      version: undefined,\n    });\n  }\n\n  function backToSchema() {\n    replaceRoute({ ...(get(route) as SchemasRoute), version: undefined });\n  }\n</script>\n\n<style>\n  ul.breadcrumbs {\n    justify-content: center;\n    font-size: 16px;\n  }\n</style>\n\n<ul class=\"breadcrumbs\">\n  <li><a on:click={backToAllSchemas}>All Schemas</a></li>\n  {#if $schemaId}\n    {#if !$version}\n      <li>{$schemaName}</li>\n    {:else}\n      <li><a on:click={backToSchema}>{$schemaName}</a></li>\n      <li>{$version}</li>\n    {/if}\n  {/if}\n</ul>\n","<script lang=\"ts\">\n  import { get } from \"svelte/store\";\n  import { route } from \"../../route\";\n  import type { SchemasRoute } from \"../../route\";\n  import type { Schema } from \"../../models\";\n\n  import Breadcrumbs from \"./Breadcrumbs.svelte\";\n  import Link from \"../../components/Link.svelte\";\n\n  export let showBreadcrumbs: boolean = false;\n  export let schema: Schema;\n  export let version: string | null;\n\n  $: versionDefinition = schema.versions.find((v) => v.version === version)\n    ?.definition;\n  $: versionPretty = versionDefinition\n    ? JSON.stringify(JSON.parse(versionDefinition), null, 4)\n    : \"\";\n\n  function versionLink(version: string): SchemasRoute {\n    return { ...(get(route) as SchemasRoute), version };\n  }\n</script>\n\n<style>\n  .breadcrumb-container {\n    width: 100%;\n  }\n\n  .version {\n    white-space: pre-wrap;\n    text-align: left;\n  }\n</style>\n\n<div class=\"col-8 align-center\">\n  <section>\n    {#if showBreadcrumbs}\n      <div class=\"breadcrumb-container\">\n        <Breadcrumbs />\n      </div>\n    {/if}\n\n    <table>\n      <tbody>\n        <tr>\n          <td><b>Name</b></td>\n          <td>{schema.name}</td>\n        </tr>\n        <tr>\n          <td><b>ID</b></td>\n          <td>{schema.id}</td>\n        </tr>\n        <tr>\n          <td><b>Topic</b></td>\n          <td>{schema.topic}</td>\n        </tr>\n        <tr>\n          <td><b>Query Address</b></td>\n          <td>{schema.queryAddress}</td>\n        </tr>\n        <tr>\n          <td><b>Type</b></td>\n          <td>{schema.schemaType}</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n  <section>\n    <div class=\"row\">\n      <div class=\"col-sm-6\">\n        {#if schema.versions.length}\n          <h5>Versions</h5>\n          <ol>\n            {#each schema.versions as version}\n              <li>\n                <Link replace={true} to={versionLink(version.version)}>\n                  {version.version}\n                </Link>\n              </li>\n            {/each}\n          </ol>\n        {/if}\n      </div>\n      <div class=\"col-sm-6\">\n        {#if version}\n          <pre class=\"version\">\n            {versionPretty}\n          </pre>\n        {:else}\n          <p>Please select a version.</p>\n        {/if}\n      </div>\n    </div>\n  </section>\n</div>\n","<script lang=\"ts\">\n  import { get, derived } from \"svelte/store\";\n  import { schemas } from \"../../stores\";\n  import { getLoaded } from \"../../utils\";\n  import { route, replaceRoute } from \"../../route\";\n  import type { SchemasRoute } from \"../../route\";\n\n  import Link from \"../../components/Link.svelte\";\n\n  export let fullWidth: boolean = false;\n\n  const allSchemas = derived(schemas, ($schemas) => getLoaded($schemas) || []);\n  const selectedId = derived(route, ($r) => ($r as SchemasRoute).id);\n  const nameQuery = derived(route, ($r) => ($r as SchemasRoute).query);\n\n  const visibleSchemas = derived(\n    [allSchemas, nameQuery],\n    ([$schemas, $query]) => {\n      const lowerQuery = ($query || \"\").toLowerCase();\n      return $schemas.filter((schema) =>\n        schema.name.toLowerCase().includes(lowerQuery)\n      );\n    }\n  );\n\n  function setQuery(query: string) {\n    replaceRoute({ ...(get(route) as SchemasRoute), query });\n  }\n\n  function selectSchema(schemaId: string) {\n    replaceRoute({ ...(get(route) as SchemasRoute), id: schemaId, version: undefined });\n  }\n</script>\n\n<style>\n  .schema-name-query {\n    padding-top: 10px;\n    padding-bottom: 20px;\n    border-bottom: 1px solid #e0e0e0;\n    margin-bottom: 10px;\n  }\n\n  .add-schema-button {\n    margin-top: 5px;\n  }\n</style>\n\n<div class={`sidebar ${fullWidth ? '' : 'sidebar-left align-right'}`}>\n  <h3 class=\"sidebar-category\">Your Schemas</h3>\n  <div class=\"schema-name-query\">\n    <input\n      type=\"text\"\n      placeholder=\"Employee\"\n      value={$nameQuery || ''}\n      on:input={(event) => setQuery(event.currentTarget.value)} />\n  </div>\n  <ul class=\"sidebar-links\">\n    {#if $visibleSchemas.length}\n      {#each $visibleSchemas as schema}\n        <li>\n          <a\n            title={schema.id}\n            class={schema.id === $selectedId ? 'active' : ''}\n            on:click={() => selectSchema(schema.id)}>\n            {schema.name}\n          </a>\n        </li>\n      {/each}\n    {:else}\n      <li><i>No schemas match the given query.</i></li>\n    {/if}\n    <li class=\"add-schema-button\">\n      <Link to={{ page: 'schemas', creating: true }}>\n        <button>Add New Schema</button>\n      </Link>\n    </li>\n  </ul>\n</div>\n","<script lang=\"ts\">\n  import { get, derived } from \"svelte/store\";\n  import { schemas } from \"../../stores\";\n  import { getLoaded } from \"../../utils\";\n  import { loadSchemas } from \"../../api\";\n  import { route } from \"../../route\";\n  import type { SchemasRoute } from \"../../route\";\n\n  import Overview from \"./Overview.svelte\";\n  import Sidebar from \"./Sidebar.svelte\";\n  import Link from \"../../components/Link.svelte\";\n  import RemoteContent from \"../../components/RemoteContent.svelte\";\n\n  const schemaId = derived(route, ($r) => ($r as SchemasRoute).id);\n  const version = derived(route, ($r) => ($r as SchemasRoute).version);\n  const creating = derived(route, ($r) => ($r as SchemasRoute).creating);\n\n  if (get(schemas).status === \"not-loaded\") {\n    loadSchemas();\n  }\n\n  const schema = derived([schemas, schemaId], ([$schemas, $schemaId]) =>\n    (getLoaded($schemas) || []).find((schema) => schema.id === $schemaId)\n  );\n</script>\n\n<style>\n  .no-schema-selected {\n    margin: auto;\n    height: 100%;\n    vertical-align: middle;\n  }\n</style>\n\n<RemoteContent data={$schemas}>\n  <div slot=\"loading\" class=\"container container-small\">\n    <div class=\"row\">\n      <div class=\"col align-center\">\n        <h2>Your Schemas (are loading...)</h2>\n        <div class=\"progress-bar striped animated\">\n          <span class=\"progress-bar-green\" style=\"width: 100%;\" />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  {#if getLoaded($schemas)?.length === 0}\n    <div class=\"container container-small\">\n      <div class=\"row align-center\">\n        <div class=\"col align-center\">\n          <h2>Schemas</h2>\n          <p>You have no schemas.</p>\n          <p>\n            <Link to={{ page: 'schemas', creating: true }}>\n              <button>Create a Schema</button>\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  {:else}\n    <div class=\"container\">\n      <section>\n        <div class=\"align-center\">\n          <h2>Schemas</h2>\n        </div>\n        <div class=\"display-md-down\">\n          {#if $schema}\n            <Overview\n              showBreadcrumbs={true}\n              schema={$schema}\n              version={$version} />\n          {:else}\n            <Sidebar fullWidth={true} />\n          {/if}\n        </div>\n        <div class=\"display-md-up\">\n          <div class=\"row\">\n            <div class=\"col-sm-3\">\n              <Sidebar />\n            </div>\n            <div class=\"col-sm-9\">\n              {#if $schema}\n                <Overview schema={$schema} version={$version} />\n              {:else}\n                <section class=\"no-schema-selected\">\n                  <p class=\"align-center\">\n                  Please select a schema from the left.\n                  </p>\n                </section>\n              {/if}\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  {/if}\n</RemoteContent>\n","<script lang=\"ts\">\n  import Link from \"../components/Link.svelte\";\n</script>\n\n<div class=\"container container-small\">\n  <div class=\"row\">\n    <div class=\"col align-center\">\n      <h2>Error 404</h2>\n      <p>That page doesn't exist.</p>\n      <Link to={{ page: 'home' }}><button>Back to Home</button></Link>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import Header from \"./components/Header.svelte\";\n  import { route } from \"./route\";\n  import { darkMode } from \"./stores\";\n\n  import Home from \"./pages/Home.svelte\";\n  import Insert from \"./pages/insert/Insert.svelte\";\n  import Query from \"./pages/query/Query.svelte\";\n  import Settings from \"./pages/Settings.svelte\";\n  import Schemas from \"./pages/schemas/Schemas.svelte\";\n  import NotFound from \"./pages/NotFound.svelte\";\n</script>\n\n<style>\n  div.dark-mode {\n    background: #424242;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n</style>\n\n<main>\n  <div class={`${$darkMode ? 'dark-mode' : ''}`}>\n    <Header />\n    {#if $route === null}\n      <NotFound />\n    {:else if $route.page === 'home'}\n      <Home />\n    {:else if $route.page === 'insert'}\n      <Insert />\n    {:else if $route.page === 'query'}\n      <Query />\n    {:else if $route.page === 'settings'}\n      <Settings />\n    {:else}\n      <Schemas />\n    {/if}\n  </div>\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","null_to_empty","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","parseCurrentRoute","hash","location","params","URLSearchParams","split","page","startsWith","by","get","includes","id","query","version","creating","routeToString","route","key","join","innerRoute","replaceRoute","to","history","replaceState","window","onpopstate","$inner","notLoaded","status","loading","loaded","schemas","apiUrl","localStorage","getItem","url","setItem","darkMode","className","title","replace","pushState","pushRoute","isDarkMode","JSON","stringify","menuOpen","objectId","messages","sendTransaction","getLoaded","validUuid","test","allSchemas","topic","queryAddress","schemaType","versions","mockData","schemaId","some","loadSchemas","setTimeout","error","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","byteToHex","toString","substr","v4","buf","offset","rnds","random","arr","arguments","toLowerCase","TypeError","addMessage","objectIdError","dataError","errorsFound","parsedData","parse","exception","uuidv4","transaction","message","setResults","queryBy","$r","objectIds","objectIdsError","currentTarget","$route","find","ids","trim","every","console","log","results","resultsPretty","reduce","res","schemaName","$id","$schemas","_a","_b","schema","showBreadcrumbs","versionDefinition","v","versionPretty","fullWidth","selectedId","nameQuery","visibleSchemas","$query","lowerQuery","setQuery","selectSchema","$schemaId","body"],"mappings":"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"}