name: Test

on:
  push:
    branches: [ develop ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  cilppy:
    name: Verify and test workspace
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy, rustfmt

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

      - name: Fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  acceptance-test:
    name: Test services
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: 1234qwer
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - name: Build services
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace

      - name: Install Python 3
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Provision postgres
        run: psql -d "postgresql://postgres:1234qwer@localhost:5432/postgres" -f examples/deploy/docker-volume/postgres1/init/init.sql

      - name: Run python acceptance tests
        run: python3 -m unittest discover tests "*_test.py"
        env:
          DB_SHRINKER_POSTGRES_EXE: ${{ github.workspace }}/target/debug/db_shrinker_postgres
          POSTGRES_CONNECTION_URL: "postgresql://postgres:1234qwer@localhost:5432/postgres"
