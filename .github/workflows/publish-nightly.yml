name: Publish nightly

on:
  schedule:
    - cron: "0 1 * * *"

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit date
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - name: Print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: Check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
          if $(git --no-pager  log --oneline --after="24 hours" | grep -P "[a-f0-9]{6,8} (feat:|fix:)" >> /dev/null)
          then
            "::set-output name=should_run::false"
          fi
  build-and-deploy:
    name: nightly docker.io
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repo
      uses: actions/checkout@v2
      with:
        ref: develop

    - name: Login to registry
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_LOGIN }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push crates
      run: |
        crates=(command-service data-router leader-elector query-service query-service-ts schema-registry query-router api)
        version="dev-$(date -u +'%Y-%m-%d')"
        for crate in "${crates[@]}"
        do
        docker build . --build-arg BIN=$crate -t epiphanyplatform/cdl-$crate:$version
        docker tag epiphanyplatform/cdl-$crate:$version epiphanyplatform/cdl-$crate:latest-dev
        docker push epiphanyplatform/cdl-$crate:$version
        docker push epiphanyplatform/cdl-$crate:latest-dev
        done
      env:
        DOCKER_BUILDKIT: 1

    - name: Build and push web-admin
      run: |
        cd web-admin
        version="dev-$(date -u +'%Y-%m-%d')
        docker build . -t epiphanyplatform/cdl-web-admin:$version
        docker tag epiphanyplatform/cdl-web-admin:$version epiphanyplatform/cdl-web-admin:latest-dev
        docker push epiphanyplatform/cdl-web-admin:$version
        docker push epiphanyplatform/cdl-web-admin:latest-dev
